

" for FuzzyFinder
"nnoremap <unique> <silent> <space>fb :fufbuffer!<cr>
"nnoremap <unique> <silent> <space>ff :fuffile!<cr>
"nnoremap <unique> <silent> <space>fm :fufmrufile!<cr>
"nnoremap <unique> <silent> <space>fc :fufrenewcache<cr>
"autocmd filetype fuf nmap <c-c> <esc>
"let g:fuf_patternseparator = ' '
"let g:fuf_mrufile_exclude = '\v\.ds_store|\.git|\.swp|\.svn'
"let g:fuf_mrufile_maxitem = 100
"let g:fuf_enumeratinglimit = 20
"let g:fuf_file_exclude = '\v\.ds_store|\.git|\.swp|\.svn'
"let g:fuf_modesDisable = ['mrucmd']

" for browsereload-mac
command! -bar Cr silent ChromeReload
command! -bar Fr silent FirefoxReload
command! -bar Sr silent SafariReload
command! -bar Or silent OperaReload
command! -bar Ar silent AllBrowserReload

command! -bar CrStart silent ChromeReloadStart
command! -bar FrStart silent FirefoxReloadStart
command! -bar SrStart silent SafariReloadStart
command! -bar OrStart silent OperaReloadStart
command! -bar ArStart silent AllBrowserReloadStart

command! -bar CrStop silent ChromeReloadStop
command! -bar FrStop silent FirefoxReloadStop
command! -bar SrStop silent SafariReloadStop
command! -bar OrStop silent OperaReloadStop
command! -bar ArStop silent AllBrowserReloadStop

" for neocomplcache ---------------------------------------------------------
"let g:neocomplcache_enable_at_startup = 1 " 起動時に有効化

" for unite.vim ---------------------------------------------------------
"let g:unite_enable_start_insert=1
"nnoremap <silent> ,ub :<C-u>Unite buffer<CR>
"nnoremap <silent> ,uf :<C-u>UniteWithBufferDir -buffer-name=files file<CR>
"nnoremap <silent> ,ur :<C-u>Unite -buffer-name=register register<CR>
"nnoremap <silent> ,um :<C-u>Unite file_mru<CR>
"nnoremap <silent> ,uu :<C-u>Unite buffer file_mru<CR>
"nnoremap <silent> ,ua :<C-u>UniteWithBufferDir -buffer-name=files buffer file_mru bookmark file<CR>
"au FileType unite nnoremap <silent> <buffer> <expr> <C-j> unite#do_action('split')
"au FileType unite inoremap <silent> <buffer> <expr> <C-j> unite#do_action('split')
"au FileType unite nnoremap <silent> <buffer> <expr> <C-l> unite#do_action('vsplit')
"au FileType unite inoremap <silent> <buffer> <expr> <C-l> unite#do_action('vsplit')
"au FileType unite nnoremap <silent> <buffer> <ESC><ESC> q
"au FileType unite inoremap <silent> <buffer> <ESC><ESC> <ESC>q

" for vim-flake8
" let g:flake8_ignore='E501'

" for vim-autopep8
let g:autopep8_disable_show_diff=1
let g:autopep8_aggressive=2
let g:autopep8_ignore="E501,E309"
"let g:autopep8_diff_type='vertical'
" autocmd FileType python noremap <buffer> <F8> :call Autopep8()<CR>
autocmd FileType python set equalprg=autopep8\ -

" for vim-autoflake8
let g:autoflake_remove_all_unused_imports=1
let g:autoflake_remove_unused_variables=1
let g:autoflake_disable_show_diff=1

" for minibufexpl.vim
let g:miniBufExplCheckDupeBufs = 0

" for ropevim
"let g:ropevim_autoimport_modules = ["os", "shutil"]
"
autocmd FileType python setlocal completeopt-=preview

function Autoformat()
  :call Autoflake()
  :w
  :call Autopep8()
endfunction
autocmd FileType python map <buffer> <F8> :call Autoformat()<CR>:

" for typescript-vim
autocmd BufRead,BufNewFile *.ts set filetype=typescript

let g:yankring_clipboard_monitor=0

let g:jedi#popup_select_first = 0
let g:jedi#popup_on_dot = 0

let g:jedi#popup_select_first = 0
let g:jedi#popup_on_dot = 0

" vim-go
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1

autocmd FileType go :highlight goErr cterm=bold ctermfg=214
autocmd FileType go :match goErr /\<err\>/
